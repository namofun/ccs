@model JuryViewRejudgingModel
@{
    ViewData["Title"] = $"Rejudging {Model.Id}";
    ViewData["RefreshAfter"] = "updateMatrix";
    ViewData["RefreshSpan"] = 15;
    if (ViewData.ContainsKey("InAjax")) { Layout = null; }
}

@functions {
    public static string For(Verdict verdict)
    {
        return verdict switch
        {
            Verdict.TimeLimitExceeded => "TLE",
            Verdict.MemoryLimitExceeded => "MLE",
            Verdict.RuntimeError => "RTE",
            Verdict.OutputLimitExceeded => "OLE",
            Verdict.WrongAnswer => "WA",
            Verdict.CompileError => "CE",
            Verdict.Accepted => "AC",
            Verdict.Pending => null,
            Verdict.Running => null,
            Verdict.Unknown => "JE",
            Verdict.UndefinedError => "JE",
            _ => "JE",
        };
    }
}

@section Header {
    <h2 class="mt-2">
        @ViewData["Title"]
        <span asp-show-if="Model.Applied == false">
            (cancelled)
        </span>
    </h2>

    <div class="row">
        <div class="col-lg-4">
            <table class="table table-sm table-striped">
                <tr>
                    <th>Reason</th>
                    <td>@Model.Reason</td>
                </tr>
                <tr>
                    <th>Issued by</th>
                    <td>
                        <a asp-area="Account" asp-controller="Profile" asp-action="Show" asp-route-username="@Model.IssuedBy">
                            @Model.IssuedBy
                        </a>
                    </td>
                </tr>
                <tr asp-show-if="Model.OperatedBy != null">
                    <th>@(Model.Applied.Value ? "Accepted" : "Cancelled") by</th>
                    <td>
                        <a asp-area="Account" asp-controller="Profile" asp-action="Show" asp-route-username="@Model.OperatedBy">
                            @Model.OperatedBy
                        </a>
                    </td>
                </tr>
                <tr>
                    <th>Start time</th>
                    <td>
                        <span title="@Model.StartTime">
                            @Model.StartTime?.ToString("HH:mm")
                        </span>
                    </td>
                </tr>
                <tr>
                    <th>Apply time</th>
                    <td>
                        <span title="@Model.EndTime">
                            @(Model.EndTime?.ToString("HH:mm") ?? "-")
                        </span>
                    </td>
                </tr>
                <tr class="d-none">
                    <th>Queued</th>
                    <td><span data-todo>-1</span> unfinished judgings</td>
                </tr>
            </table>
        </div>
    </div>

    <div data-rejudging-buttons></div>
    <div data-rejudging-matrix></div>

    <h3 class="mt-4">Details</h3>
}

<span class="d-none" data-new-todo>
    @Model.UndoneCount
</span>

<div class="d-none" data-new-rejudging-buttons>
    <p asp-show-if="Model.OperatedBy != null">
        <a asp-action="Repeat" class="btn btn-primary" data-toggle="ajaxWindow" data-target="repeat">
            <i class="fas fa-sync"></i> Repeat rejudging
        </a>
    </p>
    <form asp-show-if="Model.OperatedBy == null && Model.UndoneCount <= 0" method="post">
        <button asp-action="Cancel" type="submit" class="btn btn-danger">
            <i class="fas fa-times"></i> Cancel rejudging
        </button>
        <button asp-action="Apply" type="submit" class="btn btn-success">
            <i class="fas fa-check"></i> Apply rejudging
        </button>
    </form>
    <form asp-show-if="Model.OperatedBy == null && Model.UndoneCount > 0" asp-action="Cancel" method="post">
        <button type="submit" class="btn btn-danger">
            <i class="fas fa-times"></i> Cancel rejudging
        </button>
    </form>
</div>

<div class="d-none" data-new-rejudging-matrix>
    @{ Model.GetMatrix(out var usedVerdicts, out var its); }
    <div class="mt-3">
        <h3>Overview of changes</h3>

        <table class="rejudgetable">
            <tr>
                <th title="old vs. new verdicts">-\+</th>
                @foreach (var v in usedVerdicts)
                {
                    <th title="@For(v) (new)">@For(v)</th>
                }
            </tr>
            @for (int i = 0; i < usedVerdicts.Length; i++)
            {
                <tr>
                    <th title="@For(usedVerdicts[i]) (old)">@For(usedVerdicts[i])</th>
                    @for (int j = 0; j < usedVerdicts.Length; j++)
                    {
                        <td class="@(i == j ? "identical" : its[i, j] == 0 ? "zero" : "changed")">@its[i, j]</td>
                    }
                </tr>
            }
        </table>
    </div>
</div>

@if (Model.Any())
{
    int total = 0, correct = 0;

    <table class="data-table table table-hover table-striped table-sm submissions-table">
        <thead class="thead-light">
            <tr>
                <th scope="col">ID</th>
                <th scope="col">time</th>
                <th scope="col">team</th>
                <th scope="col">problem</th>
                <th scope="col">lang</th>
                <th scope="col">result</th>
                <th scope="col">old result</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var s in Model)
            {
                if (s.NewJudging.Status == Verdict.Accepted) { correct++; }
                total++;
                <tr asp-controller="Submissions"
                    asp-action="Detail"
                    asp-route-sid="@s.SubmissionId"
                    asp-route-jid="@(s.NewJudging.Id)"
                    class=""
                    data-problem-id="@s.ProblemId"
                    data-team-id="@s.TeamId"
                    data-language-id="@s.Language"
                    data-submission-id="@s.SubmissionId">
                    <td use-a>s@(s.OldJudging.SubmissionId)</td>
                    <td use-a>@s.SubmitTime</td>
                    <td use-a>@Model.TeamNames.GetValueOrDefault(s.TeamId) (t@(s.TeamId))</td>
                    <td use-a class="probid">@Contest.Problems.Find(s.ProblemId)?.ShortName</td>
                    <td use-a class="langid">@s.Language</td>
                    <td use-a>@(s.NewJudging.TotalScore ?? 0) - <verdict value="@(s.NewJudging.Status)" /></td>
                    <td use-a>@(s.OldJudging.TotalScore ?? 0) - <verdict value="@s.OldJudging.Status" /></td>
                </tr>
            }
        </tbody>
    </table>

    <p>
        Total correct: @correct, submitted: @total
    </p>
}
else
{
    <div class="alert alert-warning">
        No submissions
    </div>
}

@section Scripts {
    <script>
        $(function () {
            window.updateMatrix = function () {
                var $matrixData = $('[data-new-rejudging-matrix]');
                var $matrix = $('[data-rejudging-matrix]');
                $matrix.html($matrixData.children());

                var $buttonData = $('[data-new-rejudging-buttons]');
                var $button = $('[data-rejudging-buttons]');
                $button.html($buttonData.children());

                var todo = $('[data-new-todo]').text();
                var $todo = $('[data-todo]');
                $todo.text(todo);
                if (parseInt(todo) <= 0) {
                    $todo.closest('tr').addClass('d-none');
                } else {
                    $todo.closest('tr').removeClass('d-none');
                }
            };

            updateMatrix();
        });
    </script>
}