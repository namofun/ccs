@model List<(Ccs.Registration.IRegisterProvider, object)>
@{
    ViewData["Title"] = "Register";
    Layout = "_LayoutWithSidebar";
    Ccs.Registration.RegisterProviderContext context = ViewBag.Context;
}

<form asp-action="Register" method="post">
<h2 class="mt-4 mb-3">Take part</h2>
@foreach (var item in Model)
{
<div class="form-group mb-4">
    <div class="custom-control custom-radio mb-3">
        <input type="radio" id="provider-@item.Item1.FancyName" value="@item.Item1.FancyName" name="provider" class="custom-control-input provider-radio">
        <label class="custom-control-label" for="provider-@item.Item1.FancyName">as @item.Item1.Name</label>
    </div>
    <div id="area-@item.Item1.FancyName" class="register-general-areas" style="display: none;">
        @{
            var output = item.Item1.CreateInputRenderer(ViewContext, item.Item2, ModelExpressionProvider, Json, Component, Url);
            await item.Item1.RenderInputAsync(context, output);
        }
        @output
    </div>
</div>
}
<p>
    <button class="btn btn-success" type="submit" style="display: none;" id="submit_button"><i class="fas fa-rocket"></i> Register</button>
</p>
</form>
<script>
    $(function () {
        var lastChecked = undefined;
        $('body').on('click', '.provider-radio', function () {
            let currentValue = $(this).val();
            if (lastChecked === currentValue) {
                return;
            } else if (lastChecked !== undefined) {
                $('#area-' + lastChecked).hide();
            } else {
                $('#submit_button').show();
            }

            lastChecked = currentValue;
            $('#area-' + currentValue).show();
        });
    });
</script>
