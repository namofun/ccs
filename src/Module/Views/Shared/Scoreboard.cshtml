@model FullBoardViewModel
@{
    ViewData["Title"] = "Scoreboard";
    ViewData["RefreshAfter"] = "initializeScoreboard";
    ViewData["DataAjaxClass"] = "mt-3";
    ViewData["RefreshSpan"] = 30;
    bool inajax = ViewData.ContainsKey("InAjax");
    if (inajax) { Layout = null; }
    var fil_aff = (HashSet<int>)ViewData["Filter_affiliations"];
    var fil_cat = (HashSet<int>)ViewData["Filter_categories"];
    var inJury = ViewData.ContainsKey("InJury");
    var affs = Model.Affiliations.Values.Where(a => a.Id != 0 || inJury);
    var grps = Model.Categories.Values.Where(g => g.IsPublic || inJury);
    var state = Contest.GetState();
    var dateFormat = System.Globalization.CultureInfo.GetCultureInfo(1033);
    var freezeLength = (int)((Contest.EndTime - Contest.FreezeTime)?.TotalMinutes ?? 0);
}

@section Header {
    <style>
        @@media screen {
            .scoreheader th { text-align: center; box-shadow: -1px 0px 0px 0px silver inset; border: none; background: #fff; position: sticky; top: 0px; z-index: 1; }
        }

        @@media print {
            body { padding-top: 0; }
            .scoreheader { border-bottom: 2px solid black !important; }
        }

        .sortorder_summary td, #scoresummary { border-top: 2px solid black; }
        .score_fst { background: #bc1f1f; }

        .dom-pagination .page-link { margin-left: 3px; margin-right: 3px; border-radius: .25rem; border: 1.5px solid transparent; color: rgba(0,0,0,.8); }
        .dom-pagination .active .page-link { color: #000; font-weight: 700; background-color: transparent; border: 1.5px solid black; }
        .dom-pagination .active .page-link:hover { background-color: #e9ecef; }
        .dom-pagination .page-link:focus { box-shadow: 0 0 0 0.2rem rgb(0 0 0 / 15%); }
        .dom-pagination .page-item.disabled .page-link { border-color: transparent; color: #aaa; }
    </style>
} 

<div class="card">
    <div class="card-header" style="font-family: Roboto, sans-serif; display: flex;">
        <span style="font-weight: bold;">@Contest.Name</span>
        <span style="color: DimGray; margin-left: auto;">
            @state.ToString(Contest.StartTime, Contest.EndTime)
        </span>
    </div>
</div>

<div asp-show-if="state == ContestState.Frozen || state == ContestState.Ended" class="alert alert-warning" role="alert" style="font-size: 80%;">
    The @(inJury ? "public" : "") scoreboard was frozen with @freezeLength minutes remaining - solutions
    submitted in the last @freezeLength minutes of the contest are still shown as pending.
</div>

@if ((state == ContestState.NotScheduled || state == ContestState.ScheduledToStart) && !inJury)
{
    <br />

    <div class="card-deck">
@foreach (var sortOrder in Model.RankCaches)
{
    foreach (var category in Model.Categories.Values)
    {
        if (category.SortOrder != sortOrder.Key || !category.IsPublic) { continue; }
        var used_affs = sortOrder.Where(r => r.CategoryId == category.Id).Select(r => r.AffiliationId).ToHashSet();
        if (used_affs.Count == 0) { continue; }
        <div class="card" style="font-family: Roboto, sans-serif;">
            <div class="card-header">@category.Name</div>
            <div class="card-body">
                <ul class="list-group list-group-flush">
                    @foreach (var affid in used_affs)
                    {
                        <li class="list-group-item">@Model.Affiliations.GetValueOrDefault(affid)?.Name</li>
                    }
                </ul>
            </div>
        </div>
    }
}
    </div>
}
else
{
    <div class="dropdown">
        <button class="btn btn-outline-secondary btn-sm m-2 dropdown-toggle" data-toggle="dropdown"
                aria-haspopup="true" aria-expanded="false" id="filter-toggle">
            <i class="fas fa-filter"></i>
            Filter
            @(fil_aff is null ? "" : "(affiliations)")
            @(fil_cat is null ? "" : "(categories)")
        </button>

        <div class="dropdown-menu" aria-labelledby="filter-toggle">
            <form asp-action="Scoreboard" method="get">
                <div class="m-2 p-2 form-inline">
                    <select class="form-control mr-2" multiple size="8" name="affiliations[]">
                        @foreach (var aff in affs)
                        {
                            <option issel="@(fil_aff?.Contains(aff.Id) ?? false)" value="@aff.Id">@aff.Name</option>
                        }
                    </select>
                    <select class="form-control mr-2" multiple size="8" name="categories[]">
                        @foreach (var grp in grps)
                        {
                            <option issel="@(fil_cat?.Contains(grp.Id) ?? false)" value="@grp.Id">@grp.Name</option>
                        }
                    </select>
                    <input type="submit" class="btn btn-primary btn-sm align-top" name="filter" value="filter" />
                    <a class="btn btn-secondary btn-sm align-top" asp-action="Scoreboard">clear</a>
                </div>
            </form>
        </div>
    </div>

    <domjudge-scoreboard model="Model" use-footer="true" in-jury="@ViewData.ContainsKey("InJury")" page="@((int?)ViewData["Paging"])" />
}

<p id="lastmod">
    Last Update: @Html.CstTime(Model.UpdateTime, false)<br />
    using <a href="https://www.domjudge.org/" rel="nofollow" target="_top">DOMjudge</a> judgehost and theme
</p>

@if (!inajax)
{
    @section Scripts {
    <script>
        function pinScoreheader() {
            $('.scoreheader th').css('top', $('.fixed-top').css('height'));
            if ('ResizeObserver' in window) {
                var resizeObserver = new ResizeObserver(() => {
                    $('.scoreheader th').css('top', $('.fixed-top').css('height'));
                });
                resizeObserver.observe($('.fixed-top')[0]);
            }
        }

        initFavouriteTeams();
        pinScoreheader();

        var scoreboardUrl = '@Html.Raw(ViewData["RefreshUrl"])';

        $(function () {
            window.initializeScoreboard = function () {
                var $newProgress = $('[data-ajax-refresh-target] > .d-none > [data-progress-bar]');
                if ($newProgress.length) {
                    var $oldProgress = $('body > [data-progress-bar]');
                    $oldProgress.html($newProgress.children());
                    $newProgress.parent().remove();
                }

                initFavouriteTeams();
                pinScoreheader();
            };
        });
    </script>
    }
}
