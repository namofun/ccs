@inject IMenuProvider Menu
@{
    ViewData["Title"] = "Jury";
    var state = Contest.GetState();
    var juries = await Contest.Context.ListJuriesAsync();

    var submenus = Menu.Find(CcsDefaults.JuryMenuList)
        .OfType<ISubmenu>()
        .Where(a => a.Any(b => b.Satisfy(ViewContext)))
        .ToList();
}

@functions {
    static string PassingTime(DateTimeOffset? start, TimeSpan? end)
    {
        return end.HasValue && start.HasValue ? (start + end).Value.ToString()
            : end.HasValue ? "+" + end.Value.ToString()
            : "-";
    }
}

<h1 class="mt-2 mb-2">@(Contest.Kind == CcsDefaults.KindProblemset ? "Problemset" : "Contest") <span>@Contest.ShortName</span></h1>

<!--
<form method="post">
    <table class="table table-hover mb-0">
        <tbody>
            <tr>
                <td class="align-middle"><i class="fas fa-@(state >= ContestState.Started ? "check" : "")"></i></td>
                <td class="align-middle"><b>Start time:</b></td>
                <td class="align-middle">@(Contest.StartTime?.ToString() ?? "not scheduled")</td>
                <td class="align-middle">
                    <button asp-show-if="state == ContestState.ScheduledToStart" asp-action="ChangeState" asp-route-target="startnow" class="btn btn-sm btn-primary">start now</button>
                    <button asp-show-if="state == ContestState.ScheduledToStart" asp-action="ChangeState" asp-route-target="delay" class="mt-1 mt-md-0 btn btn-sm btn-primary">delay</button>
                    <button asp-show-if="state == ContestState.NotScheduled" asp-action="ChangeState" asp-route-target="startnow" class="btn btn-sm btn-primary">start now</button>
                </td>
            </tr>
            <tr>
                <td class="align-middle"><i class="fas fa-@(Contest.FreezeTime.HasValue && state >= ContestState.Frozen ? "check" : "")"></i></td>
                <td class="align-middle"><b>Freeze time:</b></td>
                <td class="align-middle">@PassingTime(Contest.StartTime, Contest.FreezeTime)</td>
                <td class="align-middle"><button asp-show-if="state == ContestState.Started" asp-action="ChangeState" asp-route-target="freeze" class="btn btn-sm btn-primary">freeze now</button></td>
            </tr>
            <tr>
                <td class="align-middle"><i asp-show-if="Contest.EndTime.HasValue && state >= ContestState.Ended" class="fas fa-check"></i></td>
                <td class="align-middle"><b>End time:</b></td>
                <td class="align-middle">@PassingTime(Contest.StartTime, Contest.EndTime)</td>
                <td class="align-middle"><button asp-show-if="state == ContestState.Started || state == ContestState.Frozen" asp-action="ChangeState" asp-route-target="endnow" class="btn btn-sm btn-primary">end now</button></td>
            </tr>
            <tr>
                <td class="align-middle"><i class="fas fa-@(Contest.UnfreezeTime.HasValue && state >= ContestState.Finalized ? "check" : "")"></i></td>
                <td class="align-middle"><b>Unfreeze time:</b></td>
                <td class="align-middle">@PassingTime(Contest.StartTime, Contest.UnfreezeTime)</td>
                <td class="align-middle"><button asp-show-if="state == ContestState.Ended" asp-action="ChangeState" asp-route-target="unfreeze" class="btn btn-sm btn-primary">unfreeze now</button></td>
            </tr>
        </tbody>
    </table>
</form>
-->

<style>
    @@media (min-width: 1600px) {
        .col-xxl-3 {
            -ms-flex: 0 0 25%;
            flex: 0 0 25%;
            max-width: 25%;
        }
        .col-xxl-4 {
            -ms-flex: 0 0 33.333333%;
            flex: 0 0 33.333333%;
            max-width: 33.333333%;
        }
    }
</style>

<div class="row">
    <div class="col-lg-6 col-xl-5 col-xxl-4">
        <h4 class="text-left mb-3">@Contest.Name</h4>
        <table class="table table-sm table-striped">
            <tr>
                <th>CID</th>
                <td>c@(Contest.Id)</td>
            </tr>
            <tr>
                <th>Type</th>
                <td>
                    @(Contest.Kind switch
                    {
                        CcsDefaults.KindDom => "Contest",
                        CcsDefaults.KindGym => "Practice",
                        CcsDefaults.KindProblemset => "Problemset",
                        _ => "Unknown"
                    })
                </td>
            </tr>
            <tr>
                <th>Short name</th>
                <td>@Contest.ShortName</td>
            </tr>
            <tr>
                <th>Name</th>
                <td>@Contest.Name</td>
            </tr>
            <tr asp-show-if="Contest.Kind != CcsDefaults.KindProblemset">
                <th>Start time</th>
                <td>@(Contest.StartTime?.ToString() ?? "not scheduled")</td>
            </tr>
            <tr asp-show-if="Contest.Kind != CcsDefaults.KindProblemset">
                <th>Scoreboard freeze</th>
                <td>@PassingTime(Contest.StartTime, Contest.FreezeTime)</td>
            </tr>
            <tr asp-show-if="Contest.Kind != CcsDefaults.KindProblemset">
                <th>End time</th>
                <td>@PassingTime(Contest.StartTime, Contest.EndTime)</td>
            </tr>
            <tr asp-show-if="Contest.Kind != CcsDefaults.KindProblemset">
                <th>Scoreboard unfreeze</th>
                <td>@PassingTime(Contest.StartTime, Contest.UnfreezeTime)</td>
            </tr>
            <tr asp-show-if="Contest.Kind == CcsDefaults.KindDom">
                <th>Process balloons</th>
                <td>@(Contest.Settings.BalloonAvailable ? "Yes" : "No")</td>
            </tr>
            <tr asp-show-if="Contest.Kind == CcsDefaults.KindDom">
                <th>Process printings</th>
                <td>@(Contest.Settings.PrintingAvailable ? "Yes" : "No")</td>
            </tr>
            <tr asp-show-if="Contest.Kind == CcsDefaults.KindDom">
                <th>Emit CCS events</th>
                <td>@(Contest.Settings.EventAvailable ? "Yes" : "No")</td>
            </tr>
            <tr>
                <th>Publicly visible</th>
                <td>@(Contest.IsPublic ? "Yes" : "No")</td>
            </tr>
            <tr>
                <th>Registration</th>
                <td>@(Contest.Settings.CanRegister() ? "Open" : "Closed")</td>
            </tr>
        </table>

        <p>
            <a asp-action="Edit" class="btn btn-primary"><i class="fas fa-edit"></i> Edit</a>
            <a asp-action="Description" class="btn btn-info"><i class="fab fa-markdown"></i> Description</a>
        </p>

        <h3>Jury Members</h3>
        <table class="table data-table table-sm table-striped table-hover">
            <thead class="thead-light">
                <tr>
                    <th scope="col">ID</th>
                    <th scope="col">User Name</th>
                    <th scope="col">role</th>
                    <th><a asp-in-roles="Administrator" class="text-reset" asp-action="Assign" data-toggle="ajaxWindow" data-target="assign"><i class="fas fa-plus"></i></a></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var u in juries)
                {
                    <tr asp-area="Account" asp-controller="Profile" asp-action="Show" asp-route-username="@u.Value.Item1" data-toggle="gotoUrl">
                        <td use-a>u@(u.Key)</td>
                        <td use-a>@u.Value.Item1</td>
                        <td use-a>@u.Value.Item2</td>
                        <td><a asp-in-roles="Administrator" asp-action="Unassign" asp-route-userid="@u.Key" data-toggle="ajaxWindow" data-target="unassign"><i class="fas fa-trash-alt"></i></a></td>
                    </tr>
                }
                @if (juries.Count == 0)
                {
                    <tr>
                        <td colspan="3">No data available.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="col-lg-4 col-xxl-3">
        <div class="card mb-3">
            <div class="card-header">
                Related links
            </div>
            <div class="card-body">
            @foreach (var item in submenus)
            {
                <h6 class="pl-2" data-order="@item.Priority">@item.Title</h6>
                <ul>
                @foreach (var entry in item)
                {
                    if (!entry.Satisfy(ViewContext)) { continue; }
                    <li data-order="@entry.Priority"><a href="@entry.GetLink(Url, ViewContext)">@entry.Title</a></li>
                }
                </ul>
            }
            </div>
        </div>
    </div>
</div>
